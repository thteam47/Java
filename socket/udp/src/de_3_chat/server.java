/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de_3_chat;

import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 * Click START bên Server để mở cổng
 * Client nhập user pass là admin
 * Click login
 * 2 bên client và server tương tác qua lại với nhau
 * LOGOUT chạy lại từ bước đầu start
 */
public class server extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form server
     */
    DatagramPacket packet;
    byte[] dataByte;
    String data;
    DatagramSocket ser;
    boolean check = false;
    DefaultListModel model;

    public server() {

        initComponents();
        model = new DefaultListModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tb = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtInput1 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtHistory = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(450, 350));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Thái");

        tb.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tb.setText("Waiting for the connection ...");

        jButton1.setText("Logout");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Send");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Start");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        txtInput1.setColumns(20);
        txtInput1.setRows(5);
        jScrollPane2.setViewportView(txtInput1);

        jScrollPane3.setViewportView(txtHistory);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(167, 167, 167)
                                .addComponent(jLabel1))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tb)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addGap(36, 36, 36)
                                .addComponent(jButton1)))))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tb, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton1))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        check = false;
        try {
            ser = new DatagramSocket(9999);
            while (!checkLogin()) {               
            }
            Thread t = new Thread(server.this);
            t.start();
        } catch (Exception e) {
        }


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {

            if (JOptionPane.showConfirmDialog(this, "Ban co chan chan ket thuc khong?") == 0) {
                tb.setText("Waiting for the connection ...");
                txtInput1.setText("");
                data = "exit";
                checkExit(data);
            }
        } catch (Exception e) {
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (check == false) {
            JOptionPane.showMessageDialog(this, "Not connected to the client", "Invalidation", JOptionPane.ERROR_MESSAGE);
            txtInput1.setText("");
        } else {
            try {
                data = txtInput1.getText();
                txtInput1.setText("");
                model.addElement("Thái: " + data);
                txtHistory.setModel(model);
                dataByte = new byte[2048];
                dataByte = data.getBytes();
                packet = new DatagramPacket(dataByte, dataByte.length, packet.getAddress(), packet.getPort());
                ser.send(packet);

            } catch (Exception e) {
            }

        }


    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new server().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel tb;
    private javax.swing.JList<String> txtHistory;
    private javax.swing.JTextArea txtInput1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        try {
            while (check) {
                //nhan ket qua
                byte []dataByteN = new byte[2048];
                DatagramPacket packetN = new DatagramPacket(dataByteN, dataByteN.length);
                ser.receive(packetN);
                String dataN = new String(packetN.getData(), 0, packetN.getLength());
                if (checkExit(dataN)) {
                    break;
                }
                model.addElement("Hòa: " + dataN);
                txtHistory.setModel(model);
                Thread.sleep(1000);
            }

        } catch (Exception e) {
        }
    }

    public boolean checkExit(String data) {
        try {
            if (data.equalsIgnoreCase("exit")) {
                tb.setText("Waiting for the connection ...");
                txtInput1.setText("");
                model.clear();
                txtHistory.setModel(model);
                dataByte = new byte[2048];
                dataByte = data.getBytes();
                packet = new DatagramPacket(dataByte, dataByte.length, packet.getAddress(), packet.getPort());
                ser.send(packet);
                ser.close();
                check = false;
                return true;
            }

        } catch (Exception e) {
        }
        return false;

    }

    public boolean checkLogin() {
        try {
            dataByte = new byte[2048];
            packet = new DatagramPacket(dataByte, dataByte.length);
            ser.receive(packet);
            data = new String(packet.getData(), 0, packet.getLength());
            String[] data1 = data.split("\\$");
            if (data1[0].equalsIgnoreCase("admin") && data1[1].equalsIgnoreCase("admin")) {
                data = "Successfull";
                check = true;
                tb.setText("Connected to Hòa");
                //gui tra ket qua
                dataByte = new byte[2048];
                dataByte = data.getBytes();
                packet = new DatagramPacket(dataByte, dataByte.length, packet.getAddress(), packet.getPort());
                ser.send(packet);
                return true;

            } else {
                data = "Account or password is incorrect";
                //gui tra ket qua
                dataByte = new byte[2048];
                dataByte = data.getBytes();
                packet = new DatagramPacket(dataByte, dataByte.length, packet.getAddress(), packet.getPort());
                ser.send(packet);
            }

        } catch (Exception e) {
        }
        return false;
    }
}
